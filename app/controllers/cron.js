const CronJob = require("cron").CronJob;
const config = require("@wcm/module-helper").getConfig();
const variablesHelper = require("../helpers/variables");
const sitemapGenerator = require("../helpers/sitemapGenerator");
const lbtaskchecker = require("../helpers/workflow");

let job;

const availableWebsites = ["am", "dgv"];

module.exports.init = () => {
	if (job) {
		job.stop();
	}

	const variables = variablesHelper.get();

	job = new CronJob({
		cronTime: variables.cron,
		onTick: () => {
			console.log("CRON: GENERATING SITEMAPS."); // eslint-disable-line no-console

			lbtaskchecker.reserve("SITEMAP_RENDER", new Date(new Date().getTime() + 10000), process.pid).then((canRun) => {
				if (!canRun) {
					console.log("CRON: SITEMAP GENERATED BY ANOTHER INSTANCE");
					return;
				}
				return Promise.all(
					availableWebsites.map(website => {
						return sitemapGenerator(website).then(() => {
							console.log(`CRON: SITEMAP GENERATED FOR ${website}`);
						});
					})
				).then(() => console.log("CRON: ALL SITEMAPS GENERATED!"), // eslint-disable-line no-console
					(err) => console.log("CRON: SITEMAP GENERATION FAILED => ", err) // eslint-disable-line no-console
				);
			});
		},
		onComplete: () => console.log(null, "CRON: SITEMAP GENERATION COMPLETE!"), // eslint-disable-line no-console
		start: true,
		timeZone: config.server.modules.cron.timeZone,
		runOnInit: true
	});
};

module.exports.stop = () => job.stop();
module.exports.start = () => job.start();
